<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>